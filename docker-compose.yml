services:
  app:
    build:
      context: ./
      dockerfile: Dockerfile
    image: app
    container_name: origins_state_app
    restart: unless-stopped
    environment:
      DB_CONNECTION: mysql
      DB_HOST: 172.28.0.20
      DB_PORT: 3306
      DB_DATABASE: origins_state_db
      DB_USERNAME: root
      DB_PASSWORD: "${DB_PASSWORD}"
    working_dir: /var/www
    volumes:
      - .:/var/www
    networks:
      app_network_origins_state:
        ipv4_address: 172.28.0.10

  nginx:
    image: nginx:alpine
    container_name: origins_state_nginx
    restart: unless-stopped
    ports:
      - "8081:80"
    depends_on:
      - app
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - .:/var/www
    networks:
      app_network_origins_state:
        ipv4_address: 172.28.0.30

  db:
    image: mysql:8.0
    container_name: origins_state_mysql
    restart: unless-stopped
    ports:
      - "3307:3306"
    environment:
      MYSQL_DATABASE: origins_state_db
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
    volumes:
      - db_data:/var/lib/mysql
    networks:
      app_network_origins_state:
        ipv4_address: 172.28.0.20

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: origins_state_phpmyadmin
    restart: unless-stopped
    ports:
      - "8091:80"
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: "${DB_PASSWORD}"
    depends_on:
      - db
    networks:
      app_network_origins_state:
        ipv4_address: 172.28.0.40

volumes:
  db_data:


networks:
  app_network_origins_state:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
